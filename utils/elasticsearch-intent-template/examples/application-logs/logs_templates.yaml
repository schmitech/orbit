# Elasticsearch Query DSL Templates for Application Logs
templates:
  - id: search_error_logs_recent
    version: "1.0.0"
    description: "Search for recent error logs in application"
    category: "log_search"
    complexity: "simple"

    # Elasticsearch-specific fields
    index: "logs-app-*"
    http_method: "POST"
    endpoint: "/{index}/_search"
    endpoint_type: "_search"

    # Elasticsearch Query DSL template (with variable substitution)
    query_dsl: |
      {
        "query": {
          "bool": {
            "must": [
              {
                "match": {
                  "level": "ERROR"
                }
              }
              {% if message %}
              ,{
                "match": {
                  "message": {
                    "query": "{{message}}",
                    "operator": "and",
                    "fuzziness": "AUTO"
                  }
                }
              }
              {% endif %}
              {% if user_id %}
              ,{
                "term": {
                  "user_id": "{{user_id}}"
                }
              }
              {% endif %}
              {% if service_name %}
              ,{
                "term": {
                  "service_name": "{{service_name}}"
                }
              }
              {% endif %}
            ],
            "filter": [
              {
                "range": {
                  "timestamp": {
                    "gte": "{{start_time}}",
                    "lte": "{{end_time}}"
                  }
                }
              }
              {% if environment %}
              ,{
                "term": {
                  "environment": "{{environment}}"
                }
              }
              {% endif %}
            ]
          }
        },
        "size": {{limit}},
        "from": {{offset}},
        "sort": [
          {
            "timestamp": {
              "order": "desc"
            }
          }
        ],
        "highlight": {
          "fields": {
            "message": {
              "fragment_size": 150,
              "number_of_fragments": 3
            },
            "exception.message": {
              "fragment_size": 150
            }
          },
          "pre_tags": ["<mark>"],
          "post_tags": ["</mark>"]
        },
        "_source": {
          "includes": ["timestamp", "level", "message", "service_name", "user_id", "exception", "request_id"]
        }
      }

    # Template Parameters
    parameters:
      - name: message
        type: string
        required: false
        description: "Error message text to search for"
        location: "body"
        example: "connection timeout"

      - name: user_id
        type: string
        required: false
        description: "User ID associated with error"
        location: "body"
        example: "user123"

      - name: service_name
        type: string
        required: false
        description: "Service name that generated the log"
        location: "body"
        example: "auth-service"

      - name: environment
        type: string
        required: false
        description: "Environment (production, staging, development)"
        location: "body"
        allowed_values: ["production", "staging", "development"]

      - name: start_time
        type: string
        required: false
        default: "now-24h"
        description: "Start of time range"
        location: "body"
        format: "date_time"

      - name: end_time
        type: string
        required: false
        default: "now"
        description: "End of time range"
        location: "body"
        format: "date_time"

      - name: limit
        type: integer
        required: false
        default: 100
        description: "Maximum number of results"
        location: "body"
        min: 1
        max: 10000

      - name: offset
        type: integer
        required: false
        default: 0
        description: "Result offset for pagination"
        location: "body"
        min: 0

    # Natural Language Examples for Intent Matching
    nl_examples:
      - "Show me recent error logs"
      - "Find errors in the last 24 hours"
      - "What errors did user john123 encounter?"
      - "Search for authentication errors"
      - "Show me errors with message connection timeout"
      - "Get error logs from the auth service"
      - "Find production errors from yesterday"
      - "Show me all errors for user admin"

    # Semantic Tags for Template Matching
    semantic_tags:
      action: "search"
      primary_entity: "application_logs"
      qualifiers: ["error", "recent", "filter"]
      time_based: true

    # Display configuration
    display_fields:
      - "timestamp"
      - "level"
      - "service_name"
      - "message"
      - "user_id"

    # Tags for categorization
    tags: ["logs", "errors", "search", "recent"]
    result_format: "table"
    timeout: 30

  - id: aggregate_errors_by_service
    version: "1.0.0"
    description: "Count and group errors by service name"
    category: "log_analytics"
    complexity: "medium"

    index: "logs-app-*"
    http_method: "POST"
    endpoint: "/{index}/_search"

    query_dsl: |
      {
        "query": {
          "bool": {
            "must": [
              {
                "match": {
                  "level": "ERROR"
                }
              }
            ],
            "filter": [
              {
                "range": {
                  "timestamp": {
                    "gte": "{{start_time}}",
                    "lte": "{{end_time}}"
                  }
                }
              }
              {% if environment %}
              ,{
                "term": {
                  "environment": "{{environment}}"
                }
              }
              {% endif %}
            ]
          }
        },
        "size": 0,
        "aggs": {
          "by_service": {
            "terms": {
              "field": "service_name",
              "size": {{agg_size}},
              "order": {
                "_count": "desc"
              }
            },
            "aggs": {
              "error_types": {
                "terms": {
                  "field": "exception.type",
                  "size": 5
                }
              },
              "avg_response_time": {
                "avg": {
                  "field": "response_time"
                }
              }
            }
          }
        }
      }

    parameters:
      - name: start_time
        type: string
        required: false
        default: "now-24h"
        description: "Start of time range"

      - name: end_time
        type: string
        required: false
        default: "now"
        description: "End of time range"

      - name: environment
        type: string
        required: false
        description: "Filter by environment"
        allowed_values: ["production", "staging", "development"]

      - name: agg_size
        type: integer
        required: false
        default: 20
        description: "Number of services to return"
        min: 1
        max: 100

    nl_examples:
      - "How many errors by service?"
      - "Show me error count per service"
      - "Which services have the most errors?"
      - "Count errors grouped by service"
      - "Break down errors by microservice"
      - "What's the error distribution across services?"

    semantic_tags:
      action: "aggregate"
      primary_entity: "application_logs"
      aggregation_type: "terms"
      group_by: "service_name"

    tags: ["logs", "aggregation", "analytics", "services"]
    result_format: "summary"

  - id: error_timeline
    version: "1.0.0"
    description: "Show error count over time with time-series visualization"
    category: "log_analytics"
    complexity: "medium"

    index: "logs-app-*"
    http_method: "POST"
    endpoint: "/{index}/_search"

    query_dsl: |
      {
        "query": {
          "bool": {
            "must": [
              {
                "match": {
                  "level": "ERROR"
                }
              }
            ],
            "filter": [
              {
                "range": {
                  "timestamp": {
                    "gte": "{{start_time}}",
                    "lte": "{{end_time}}"
                  }
                }
              }
              {% if service_name %}
              ,{
                "term": {
                  "service_name": "{{service_name}}"
                }
              }
              {% endif %}
            ]
          }
        },
        "size": 0,
        "aggs": {
          "errors_over_time": {
            "date_histogram": {
              "field": "timestamp",
              "calendar_interval": "{{interval}}",
              "min_doc_count": 0,
              "extended_bounds": {
                "min": "{{start_time}}",
                "max": "{{end_time}}"
              }
            },
            "aggs": {
              "by_level": {
                "terms": {
                  "field": "level",
                  "size": 5
                }
              }
            }
          }
        }
      }

    parameters:
      - name: start_time
        type: string
        required: false
        default: "now-24h"
        description: "Start of time range"

      - name: end_time
        type: string
        required: false
        default: "now"
        description: "End of time range"

      - name: service_name
        type: string
        required: false
        description: "Filter by specific service"

      - name: interval
        type: string
        required: false
        default: "1h"
        description: "Time bucket interval"
        allowed_values: ["1m", "5m", "15m", "30m", "1h", "6h", "12h", "1d"]

    nl_examples:
      - "Show me error trends over the last 24 hours"
      - "How have errors changed over time?"
      - "Display error timeline"
      - "Graph errors per hour"
      - "Show error count by hour"
      - "Error spike analysis for auth service"

    semantic_tags:
      action: "aggregate"
      primary_entity: "application_logs"
      aggregation_type: "date_histogram"
      time_series: true

    tags: ["logs", "analytics", "timeline", "trends"]
    result_format: "timeseries"

  - id: search_slow_requests
    version: "1.0.0"
    description: "Find slow API requests based on response time"
    category: "performance_analysis"
    complexity: "medium"

    index: "logs-app-*"
    http_method: "POST"
    endpoint: "/{index}/_search"

    query_dsl: |
      {
        "query": {
          "bool": {
            "must": [
              {
                "exists": {
                  "field": "response_time"
                }
              }
            ],
            "filter": [
              {
                "range": {
                  "timestamp": {
                    "gte": "{{start_time}}",
                    "lte": "{{end_time}}"
                  }
                }
              },
              {
                "range": {
                  "response_time": {
                    "gte": {{min_response_time}}
                  }
                }
              }
              {% if endpoint %}
              ,{
                "wildcard": {
                  "endpoint": "*{{endpoint}}*"
                }
              }
              {% endif %}
              {% if service_name %}
              ,{
                "term": {
                  "service_name": "{{service_name}}"
                }
              }
              {% endif %}
            ]
          }
        },
        "size": {{limit}},
        "sort": [
          {
            "response_time": {
              "order": "desc"
            }
          }
        ],
        "_source": ["timestamp", "service_name", "endpoint", "response_time", "status_code", "user_id", "request_id"]
      }

    parameters:
      - name: min_response_time
        type: integer
        required: false
        default: 1000
        description: "Minimum response time in milliseconds"
        min: 0

      - name: endpoint
        type: string
        required: false
        description: "API endpoint to filter"

      - name: service_name
        type: string
        required: false
        description: "Service name to filter"

      - name: start_time
        type: string
        required: false
        default: "now-1h"
        description: "Start of time range"

      - name: end_time
        type: string
        required: false
        default: "now"
        description: "End of time range"

      - name: limit
        type: integer
        required: false
        default: 50
        description: "Maximum results"
        min: 1
        max: 1000

    nl_examples:
      - "Show me slow requests"
      - "Find API calls taking more than 1 second"
      - "Which endpoints are slow?"
      - "Show requests with high response time"
      - "Find timeouts in the auth service"
      - "Display slowest API calls"

    semantic_tags:
      action: "search"
      primary_entity: "application_logs"
      qualifiers: ["slow", "performance", "timeout"]

    tags: ["performance", "slow", "requests", "monitoring"]
    result_format: "table"
