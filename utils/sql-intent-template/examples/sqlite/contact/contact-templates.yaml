status: completed
generated_at: '2025-10-16T17:50:29.026033'
last_updated: '2025-10-16T17:50:29.026045'
generator_version: 1.0.0
total_templates: 7
templates:
- id: find_all_users
  description: Retrieve all users with optional pagination
  sql: SELECT id, name, email, age, city FROM users LIMIT ? OFFSET ?
  parameters:
  - name: limit
    type: integer
    description: Maximum number of records to return
    required: false
    default: 100
  - name: offset
    type: integer
    description: Number of records to skip
    required: false
    default: 0
  nl_examples:
  - Show me all users
  - List all users
  - Get all users
  - Display users
  - What users do we have?
  - Find all users
  - Show every user
  - I need all users
  - Get all available users
  - Display entire user list
  result_format: table
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:49:56.445227'
  created_by: template_generator
  semantic_tags:
    action: find
    primary_entity: user
    secondary_entity: null
    qualifiers: []
  tags:
  - find
  - user
- id: find_all_users_2
  description: Retrieve all users from the system with optional pagination
  sql: SELECT id, name, email, age, city FROM users LIMIT ? OFFSET ?
  parameters:
  - name: limit
    type: integer
    description: Maximum number of records to return
    required: false
    default: 100
  - name: offset
    type: integer
    description: Number of records to skip before starting to return results
    required: false
    default: 0
  nl_examples:
  - List everything in the system
  - Find users named John
  - Show me users with name like Smith
  - Get users whose name contains 'Brown'
  - Search for users named Alice
  - Find all users with 'Wilson' in their name
  - Show me users named 'Johnson'
  - Get users with name matching 'Prince'
  - Find users with 'Davis' in their name
  - Show me users named 'Miller'
  result_format: table
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:50:01.105114'
  created_by: template_generator
  semantic_tags:
    action: find
    primary_entity: users
    secondary_entity: null
    qualifiers: []
  tags:
  - find
  - users
- id: count_all_users
  description: Counts the total number of users in the database
  sql: SELECT COUNT(*) AS user_count FROM users
  parameters: []
  nl_examples:
  - How many users do we have?
  - Count all users
  - What's the total number of users?
  - How many users are there?
  - Get the user count
  - Show me total users
  - What is the total user count?
  - How many users in the system?
  - Get total number of users
  - Show me user count
  result_format: summary
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:50:04.022581'
  created_by: template_generator
  semantic_tags:
    action: calculate
    primary_entity: user
    secondary_entity: null
    qualifiers: []
  tags:
  - calculate
  - user
  - count
- id: count_users_by_city
  description: Counts the number of users in a specific city, with optional filtering
  sql: SELECT COUNT(*) AS user_count FROM users WHERE city = ?
  parameters:
  - name: city
    type: string
    description: City name to filter users by
    required: true
    default: ''
  nl_examples:
  - How many users are in New York?
  - Count users from Los Angeles
  - Count users from Miami
  - Show me city distribution
  - How many users between 25 and 35?
  - Count users older than 40
  - How many users under 40?
  - Count users older than 25
  result_format: summary
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:50:11.639201'
  created_by: template_generator
  semantic_tags:
    action: calculate
    primary_entity: users
    secondary_entity: null
    qualifiers: []
  tags:
  - calculate
  - users
  - count
- id: count_users_per_city
  description: Counts the number of users grouped by city, with optional filtering
    by city name
  sql: SELECT city, COUNT(*) AS user_count FROM users WHERE (? = '' OR city = ?) GROUP
    BY city LIMIT ? OFFSET ?
  parameters:
  - name: city_filter
    type: string
    description: Optional city name to filter results (empty string for all cities)
    required: false
    default: ''
  - name: city_filter
    type: string
    description: City name value for comparison
    required: false
    default: ''
  - name: limit
    type: integer
    description: Maximum number of rows to return
    required: false
    default: 100
  - name: offset
    type: integer
    description: Number of rows to skip before starting to return data
    required: false
    default: 0
  nl_examples:
  - How many users per city?
  - Show me user count by city
  - Get city user counts
  - Count users by city
  - Get user counts per city
  - Show me how many users per city
  result_format: table
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:50:16.853734'
  created_by: template_generator
  semantic_tags:
    action: calculate
    primary_entity: user
    secondary_entity: city
    qualifiers: []
  tags:
  - calculate
  - user
  - city
  - count
- id: user_distribution_by_city
  description: Calculate the distribution of users by city, with optional filtering
    and pagination
  sql: SELECT city, COUNT(*) AS user_count FROM users WHERE (? = '' OR city = ?) GROUP
    BY city ORDER BY user_count DESC LIMIT ? OFFSET ?
  parameters:
  - name: city_filter
    type: string
    description: Optional city to filter by (empty string means no filter)
    required: false
    default: ''
  - name: city_filter
    type: string
    description: City value for comparison when filtering is applied
    required: false
    default: ''
  - name: limit
    type: integer
    description: Maximum number of results to return
    required: false
    default: 100
  - name: offset
    type: integer
    description: Number of results to skip
    required: false
    default: 0
  nl_examples:
  - Get user distribution by city
  - Count users in each city
  - Show me users per city
  result_format: table
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:50:22.250891'
  created_by: template_generator
  semantic_tags:
    action: calculate
    primary_entity: users
    secondary_entity: city
    qualifiers: []
  tags:
  - calculate
  - users
  - city
  - count
- id: count_users_by_location
  description: Count the number of users grouped by their location (city). Optionally
    filter by a specific city.
  sql: SELECT city, COUNT(*) AS user_count FROM users WHERE (? = '' OR city = ?) GROUP
    BY city LIMIT ? OFFSET ?
  parameters:
  - name: city_filter
    type: string
    description: City to filter by (empty string means no filter)
    required: false
    default: ''
  - name: city_filter
    type: string
    description: City value for comparison
    required: false
    default: ''
  - name: limit
    type: integer
    description: Maximum number of rows to return
    required: false
    default: 100
  - name: offset
    type: integer
    description: Number of rows to skip before starting to return data
    required: false
    default: 0
  nl_examples:
  - How many users per location?
  result_format: table
  version: 1.0.0
  approved: false
  created_at: '2025-10-16T17:50:29.009459'
  created_by: template_generator
  semantic_tags:
    action: calculate
    primary_entity: user
    secondary_entity: location
    qualifiers: []
  tags:
  - calculate
  - user
  - location
  - count
