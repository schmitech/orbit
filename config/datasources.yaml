datasources:
  chroma:
    use_local: true
    db_path: "examples/chroma/chroma_db"
    host: "localhost"
    port: 8000
    embedding_provider: "ollama" 
  qdrant:
    host: ${DATASOURCE_QDRANT_HOST}
    port: ${DATASOURCE_QDRANT_PORT}
    timeout: 5
    prefer_grpc: false
    https: false
    embedding_provider: ollama
    collection_name: "orbit"
  sqlite:
    database: "examples/sqlite/sqlite_db"
  postgres:
    host: ${DATASOURCE_POSTGRES_HOST}
    port: ${DATASOURCE_POSTGRES_PORT}
    database: ${DATASOURCE_POSTGRES_DATABASE}
    username: ${DATASOURCE_POSTGRES_USERNAME}
    password: ${DATASOURCE_POSTGRES_PASSWORD}
    sslmode: ${DATASOURCE_POSTGRES_SSL_MODE}
  supabase:
    host: ${DATASOURCE_SUPABASE_HOST}
    port: ${DATASOURCE_SUPABASE_PORT}
    database: ${DATASOURCE_SUPABASE_DATABASE}
    username: ${DATASOURCE_SUPABASE_USERNAME}
    password: ${DATASOURCE_SUPABASE_PASSWORD}
    sslmode: require
  milvus:
    host: "localhost"
    port: 19530
    dim: 768
    metric_type: "IP"  # Options: L2, IP, COSINE
    embedding_provider: null
  pinecone:
    api_key: ${DATASOURCE_PINECONE_API_KEY}
    # host: ${DATASOURCE_PINECONE_HOST}  # Only needed for pod-based indexes
    namespace: ""  # Empty string for default namespace (where data was ingested)
    embedding_provider: null
  elasticsearch:
    node: ${DATASOURCE_ELASTICSEARCH_NODE}
    verify_certs: true
    timeout: 30
    auth:
      username: ${DATASOURCE_ELASTICSEARCH_USERNAME}
      password: ${DATASOURCE_ELASTICSEARCH_PASSWORD}
  redis:
    host: ${DATASOURCE_REDIS_HOST}
    port: ${DATASOURCE_REDIS_PORT}
    password: ${DATASOURCE_REDIS_PASSWORD}
    db: 0
    use_ssl: false
    vector_field: "embedding"
    text_field: "content"
    distance_metric: "COSINE"  # Options: L2, IP, COSINE
  oracle:
    host: ${DATASOURCE_ORACLE_HOST}
    port: ${DATASOURCE_ORACLE_PORT}
    service_name: ${DATASOURCE_ORACLE_SERVICE}
    username: ${DATASOURCE_ORACLE_USERNAME}
    password: ${DATASOURCE_ORACLE_PASSWORD}
  mysql:
    host: ${DATASOURCE_MYSQL_HOST}
    port: ${DATASOURCE_MYSQL_PORT}
    database: ${DATASOURCE_MYSQL_DATABASE}
    username: ${DATASOURCE_MYSQL_USERNAME}
    password: ${DATASOURCE_MYSQL_PASSWORD}
  mariadb:
    host: ${DATASOURCE_MARIADB_HOST}
    port: ${DATASOURCE_MARIADB_PORT}
    database: ${DATASOURCE_MARIADB_DATABASE}
    username: ${DATASOURCE_MARIADB_USERNAME}
    password: ${DATASOURCE_MARIADB_PASSWORD}
  sqlserver:
    host: ${DATASOURCE_SQLSERVER_HOST}
    port: ${DATASOURCE_SQLSERVER_PORT}
    database: ${DATASOURCE_SQLSERVER_DATABASE}
    username: ${DATASOURCE_SQLSERVER_USERNAME}
    password: ${DATASOURCE_SQLSERVER_PASSWORD}
    driver: "ODBC Driver 18 for SQL Server"
  cassandra:
    contact_points: ${DATASOURCE_CASSANDRA_HOSTS}
    port: ${DATASOURCE_CASSANDRA_PORT}
    keyspace: ${DATASOURCE_CASSANDRA_KEYSPACE}
    username: ${DATASOURCE_CASSANDRA_USERNAME}
    password: ${DATASOURCE_CASSANDRA_PASSWORD}
  duckdb:
    database: ":memory:"
    read_only: false
    access_mode: "automatic"
    threads: null
  mongodb:
    # Option 1: MongoDB Atlas connection (recommended for sample_mflix)
    connection_string: ${DATASOURCE_MONGODB_URI}
    database: ${DATASOURCE_MONGODB_DATABASE}

    # Option 2: Local MongoDB connection (fallback)
    host: ${DATASOURCE_MONGODB_HOST}
    port: ${DATASOURCE_MONGODB_PORT}
    username: ${DATASOURCE_MONGODB_USERNAME}
    password: ${DATASOURCE_MONGODB_PASSWORD}
    auth_source: ${DATASOURCE_MONGODB_AUTH_SOURCE}

    # Connection settings
    timeout: 30
    tls: ${DATASOURCE_MONGODB_TLS}
    retry_writes: true
    w: "majority"

    # Legacy settings (for existing orbit database)
    apikey_collection: "api_keys"